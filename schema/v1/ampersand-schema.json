{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Ampersand Manifest Schema",
  "description": "Schema for defining Ampersand integrations in amp.yaml files. Used to configure data synchronization and integration between various SaaS platforms.",
  "type": "object",
  "required": [
    "specVersion",
    "integrations"
  ],
  "properties": {
    "specVersion": {
      "type": "string",
      "description": "The version of the manifest specification. Currently only 1.0.0 is supported. Future versions may introduce breaking changes.",
      "enum": [
        "1.0.0"
      ],
      "examples": [
        "1.0.0"
      ]
    },
    "integrations": {
      "type": "array",
      "description": "An array of integration configurations. Each integration defines connectivity with a specific provider (e.g., Salesforce, HubSpot, GitHub).",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/integration"
      },
      "examples": [
        [
          {
            "name": "salesforce-contacts",
            "displayName": "Salesforce Contacts",
            "provider": "salesforce",
            "read": {
              "objects": [
                {
                  "objectName": "contact",
                  "destination": "defaultWebhook",
                  "schedule": "*/30 * * * *",
                  "requiredFields": [
                    {
                      "fieldName": "FirstName"
                    },
                    {
                      "fieldName": "LastName"
                    },
                    {
                      "fieldName": "Email"
                    }
                  ]
                }
              ]
            }
          }
        ]
      ]
    }
  },
  "definitions": {
    "integration": {
      "type": "object",
      "required": [
        "name",
        "provider"
      ],
      "description": "Configuration for an integration with a specific provider like Salesforce, HubSpot, etc.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A unique identifier for this integration. Used in logs and as a reference. Use lowercase alphanumeric characters, hyphens and underscores only.",
          "pattern": "^[a-z0-9_-]+$",
          "maxLength": 64,
          "examples": [
            "salesforce-contacts",
            "hubspot-integration",
            "github-issues-tracker"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "A human-readable name for this integration. This name is displayed in the UI and logs. Use proper capitalization for better readability.",
          "maxLength": 100,
          "examples": [
            "Salesforce Contacts",
            "HubSpot CRM Integration",
            "GitHub Issues Tracker"
          ]
        },
        "provider": {
          "type": "string",
          "description": "The provider/platform for this integration. Must be one of the supported providers. This determines which API endpoints and authentication methods are used.",
          "examples": [
            "salesforce",
            "hubspot",
            "github",
            "intercom",
            "stripe"
          ]
        },
        "module": {
          "type": "string",
          "description": "An optional module within the provider. Some providers have multiple modules or services that can be targeted separately.",
          "examples": [
            "crm",
            "jira"
          ]
        },
        "authentication": {
          "$ref": "#/definitions/authentication",
          "description": "Authentication configuration for connecting to the provider's API."
        },
        "read": {
          "$ref": "#/definitions/read",
          "description": "Configuration for reading data from the provider."
        },
        "write": {
          "$ref": "#/definitions/write",
          "description": "Configuration for writing data to the provider."
        },
        "subscribe": {
          "$ref": "#/definitions/subscribe",
          "description": "Configuration for subscribing to events from the provider."
        },
        "proxy": {
          "$ref": "#/definitions/proxy",
          "description": "Configuration for proxying API calls to the provider."
        }
      },
      "examples": [
        {
          "name": "salesforce-full-integration",
          "displayName": "Salesforce Full Integration",
          "provider": "salesforce",
          "read": {
            "objects": [
              {
                "objectName": "contact",
                "destination": "salesforceWebhook",
                "schedule": "*/30 * * * *",
                "requiredFields": [
                  {
                    "fieldName": "FirstName"
                  },
                  {
                    "fieldName": "LastName"
                  },
                  {
                    "fieldName": "Email"
                  }
                ],
                "optionalFieldsAuto": "all"
              },
              {
                "objectName": "lead",
                "destination": "salesforceWebhook",
                "schedule": "*/30 * * * *",
                "requiredFields": [
                  {
                    "fieldName": "FirstName"
                  },
                  {
                    "fieldName": "LastName"
                  },
                  {
                    "fieldName": "Email"
                  },
                  {
                    "fieldName": "Company"
                  }
                ],
                "optionalFieldsAuto": "all"
              }
            ]
          },
          "write": {
            "objects": [
              {
                "objectName": "contact",
                "inheritMapping": true
              },
              {
                "objectName": "lead",
                "inheritMapping": true
              }
            ]
          },
          "proxy": {
            "enabled": true
          }
        }
      ]
    },
    "authentication": {
      "type": "object",
      "description": "Authentication configuration for the integration. Different providers support different authentication methods.",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The authentication type. The required fields vary based on the authentication type.",
          "enum": [
            "oauth2",
            "api_key",
            "basic",
            "jwt"
          ],
          "examples": [
            "oauth2"
          ]
        },
        "clientId": {
          "type": "string",
          "description": "For OAuth2 authentication, the client ID provided by the service provider. You can use environment variables with ${VAR_NAME} syntax.",
          "examples": [
            "${SALESFORCE_CLIENT_ID}",
            "3MVG9QDx8IX8nP5T2Ha8ofvlmRcMZ7n0L4pQus1qr9"
          ]
        },
        "clientSecret": {
          "type": "string",
          "description": "For OAuth2 authentication, the client secret provided by the service provider. You can use environment variables with ${VAR_NAME} syntax.",
          "examples": [
            "${SALESFORCE_CLIENT_SECRET}",
            "74B39E8C1B6481"
          ]
        },
        "scopes": {
          "type": "array",
          "description": "For OAuth2 authentication, the list of scopes to request. These determine what permissions your integration will have.",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "api",
              "refresh_token",
              "read:contacts",
              "write:contacts"
            ]
          ]
        },
        "apiKey": {
          "type": "string",
          "description": "For API key authentication, the API key. You can use environment variables with ${VAR_NAME} syntax.",
          "examples": [
            "${API_KEY}",
            "sk_test_xxxxxxx"
          ]
        },
        "headerName": {
          "type": "string",
          "description": "For API key authentication, the header name for the API key. Different providers may use different header names.",
          "examples": [
            "X-API-Key",
            "Authorization"
          ]
        },
        "username": {
          "type": "string",
          "description": "For basic authentication, the username. You can use environment variables with ${VAR_NAME} syntax.",
          "examples": [
            "${USERNAME}",
            "api_user@example.com"
          ]
        },
        "password": {
          "type": "string",
          "description": "For basic authentication, the password. You can use environment variables with ${VAR_NAME} syntax.",
          "examples": [
            "${PASSWORD}",
            "api_password_123"
          ]
        },
        "privateKey": {
          "type": "string",
          "description": "For JWT authentication, the private key. You can use environment variables with ${VAR_NAME} syntax.",
          "examples": [
            "${PRIVATE_KEY}"
          ]
        },
        "issuer": {
          "type": "string",
          "description": "For JWT authentication, the issuer. This identifies who created and signed the token.",
          "examples": [
            "${ISSUER}",
            "your-app-name"
          ]
        },
        "subject": {
          "type": "string",
          "description": "For JWT authentication, the subject. This identifies the user or system the token represents.",
          "examples": [
            "${SUBJECT}",
            "user@example.com"
          ]
        }
      },
      "examples": [
        {
          "type": "oauth2",
          "clientId": "${SALESFORCE_CLIENT_ID}",
          "clientSecret": "${SALESFORCE_CLIENT_SECRET}",
          "scopes": [
            "api",
            "refresh_token"
          ]
        },
        {
          "type": "api_key",
          "apiKey": "${STRIPE_API_KEY}",
          "headerName": "Authorization"
        }
      ]
    },
    "read": {
      "type": "object",
      "description": "Configuration for reading data from the provider. Defines what data to read, how frequently, and where to send it.",
      "required": [
        "objects"
      ],
      "properties": {
        "objects": {
          "type": "array",
          "description": "List of objects to read from the provider. Each object represents a data type like contacts, leads, etc.",
          "items": {
            "$ref": "#/definitions/readObject"
          },
          "examples": [
            [
              {
                "objectName": "contact",
                "destination": "webhookName",
                "schedule": "*/30 * * * *",
                "requiredFields": [
                  {
                    "fieldName": "FirstName"
                  },
                  {
                    "fieldName": "LastName"
                  }
                ]
              }
            ]
          ]
        }
      },
      "examples": [
        {
          "objects": [
            {
              "objectName": "contact",
              "destination": "salesforceWebhook",
              "schedule": "*/30 * * * *",
              "requiredFields": [
                {
                  "fieldName": "FirstName"
                },
                {
                  "fieldName": "LastName"
                },
                {
                  "fieldName": "Email"
                }
              ],
              "optionalFieldsAuto": "all",
              "backfill": {
                "defaultPeriod": {
                  "fullHistory": true
                }
              }
            },
            {
              "objectName": "lead",
              "destination": "salesforceWebhook",
              "schedule": "0 * * * *",
              "requiredFields": [
                {
                  "fieldName": "FirstName"
                },
                {
                  "fieldName": "LastName"
                },
                {
                  "fieldName": "Email"
                },
                {
                  "fieldName": "Company"
                }
              ],
              "optionalFields": [
                {
                  "fieldName": "Phone"
                },
                {
                  "fieldName": "Title"
                }
              ]
            }
          ]
        }
      ]
    },
    "readObject": {
      "type": "object",
      "description": "Configuration for a specific object to read. Defines which fields to read and how to handle the data.",
      "required": [
        "objectName",
        "destination",
        "schedule",
        "requiredFields"
      ],
      "properties": {
        "objectName": {
          "type": "string",
          "description": "The name of the object to read in the provider's API (e.g., 'contact', 'lead', 'account'). Must match an object type supported by the provider.",
          "examples": [
            "contact",
            "lead",
            "account",
            "opportunity"
          ]
        },
        "mapToName": {
          "type": "string",
          "description": "An optional name mapping for this object. Used to standardize object names across different providers in your data model.",
          "examples": [
            "customer",
            "prospect",
            "company"
          ]
        },
        "mapToDisplayName": {
          "type": "string",
          "description": "An optional display name mapping for this object. Used for UI display and documentation.",
          "examples": [
            "Customer",
            "Sales Prospect",
            "Company"
          ]
        },
        "destination": {
          "type": "string",
          "description": "The webhook destination for the read data. This determines where the data will be sent after it's read. Must match a webhook configured in your Ampersand account.",
          "examples": [
            "salesforceWebhook",
            "defaultWebhook",
            "customWebhook"
          ]
        },
        "schedule": {
          "type": "string",
          "description": "A cron schedule for reading the data. Defines how frequently the data should be read. Uses standard cron syntax with five fields (minutes, hours, day of month, month, day of week).",
          "pattern": "^(\\*|[0-5]?[0-9]|\\*/[0-9]+)\\s+(\\*|[01]?[0-9]|2[0-3]|\\*/[0-9]+)\\s+(\\*|[0-2]?[0-9]|3[01]|\\*/[0-9]+)\\s+(\\*|[0]?[0-9]|1[0-2]|\\*/[0-9]+)\\s+(\\*|[0-6]|\\*/[0-9]+)$",
          "examples": [
            "*/10 * * * *",
            "*/30 * * * *",
            "0 * * * *",
            "0 0 * * *"
          ]
        },
        "requiredFields": {
          "type": "array",
          "description": "Fields that are always read for every customer. These fields will always be included in the data that's read.",
          "items": {
            "$ref": "#/definitions/field"
          },
          "examples": [
            [
              {
                "fieldName": "FirstName"
              },
              {
                "fieldName": "LastName"
              },
              {
                "fieldName": "Email"
              }
            ]
          ]
        },
        "optionalFields": {
          "type": "array",
          "description": "Optional fields that can be included. Customers can choose which of these fields to include. Use this for fields that aren't essential.",
          "items": {
            "$ref": "#/definitions/field"
          },
          "examples": [
            [
              {
                "fieldName": "Phone"
              },
              {
                "fieldName": "Title"
              },
              {
                "fieldName": "Address"
              }
            ]
          ]
        },
        "optionalFieldsAuto": {
          "type": "string",
          "description": "Set to 'all' to automatically include all available fields as optional. This can be used instead of explicitly listing optional fields.",
          "enum": [
            "all"
          ],
          "examples": [
            "all"
          ]
        },
        "backfill": {
          "type": "object",
          "description": "Configuration for backfilling historical data. Defines how historical data should be loaded during initial sync.",
          "properties": {
            "defaultPeriod": {
              "type": "object",
              "description": "The default time period for backfilling.",
              "properties": {
                "fullHistory": {
                  "type": "boolean",
                  "description": "Whether to backfill the full history (true) or just recent data (false). Full history may take longer for large datasets.",
                  "examples": [
                    true,
                    false
                  ]
                }
              }
            }
          },
          "examples": [
            {
              "defaultPeriod": {
                "fullHistory": true
              }
            }
          ]
        }
      },
      "examples": [
        {
          "objectName": "contact",
          "destination": "salesforceWebhook",
          "schedule": "*/30 * * * *",
          "requiredFields": [
            {
              "fieldName": "FirstName"
            },
            {
              "fieldName": "LastName"
            },
            {
              "fieldName": "Email"
            }
          ],
          "optionalFieldsAuto": "all",
          "backfill": {
            "defaultPeriod": {
              "fullHistory": true
            }
          }
        },
        {
          "objectName": "lead",
          "mapToName": "prospect",
          "mapToDisplayName": "Sales Prospect",
          "destination": "salesforceWebhook",
          "schedule": "0 * * * *",
          "requiredFields": [
            {
              "fieldName": "FirstName"
            },
            {
              "fieldName": "LastName"
            },
            {
              "fieldName": "Email"
            },
            {
              "mapToName": "priority",
              "mapToDisplayName": "Priority Score",
              "prompt": "Which field do you use to track the priority of a lead?"
            }
          ],
          "optionalFields": [
            {
              "fieldName": "Phone"
            },
            {
              "fieldName": "Title"
            }
          ]
        }
      ]
    },
    "field": {
      "type": "object",
      "description": "Configuration for a field to read or write. Fields can be specified by simple name or with mappings and prompts.",
      "oneOf": [
        {
          "required": [
            "fieldName"
          ],
          "properties": {
            "fieldName": {
              "type": "string",
              "description": "The name of the field in the provider's API. Must match a field available in the provider's API for the specified object.",
              "examples": [
                "FirstName",
                "LastName",
                "Email",
                "Phone"
              ]
            },
            "mapToName": {
              "type": "string",
              "description": "An optional name mapping for this field. Used to standardize field names across different providers in your data model.",
              "examples": [
                "first_name",
                "last_name",
                "email_address"
              ]
            },
            "mapToDisplayName": {
              "type": "string",
              "description": "An optional display name mapping for this field. Used for UI display and documentation.",
              "examples": [
                "First Name",
                "Last Name",
                "Email Address"
              ]
            }
          },
          "examples": [
            {
              "fieldName": "FirstName",
              "mapToName": "first_name",
              "mapToDisplayName": "First Name"
            },
            {
              "fieldName": "Email"
            }
          ]
        },
        {
          "required": [
            "mapToName",
            "mapToDisplayName",
            "prompt"
          ],
          "properties": {
            "mapToName": {
              "type": "string",
              "description": "A name mapping for this field in your data model. Used when the field name varies across providers or customers.",
              "examples": [
                "priority",
                "status",
                "linkedin_url"
              ]
            },
            "mapToDisplayName": {
              "type": "string",
              "description": "A display name mapping for this field. Used in the UI when prompting users to select fields.",
              "examples": [
                "Priority Score",
                "Status",
                "LinkedIn URL"
              ]
            },
            "prompt": {
              "type": "string",
              "description": "A prompt to show when configuring this field. Helps users understand what the field is for or to select the appropriate field.",
              "examples": [
                "Which field do you use to track the priority of a lead?",
                "Select the field you use for tracking LinkedIn profiles"
              ]
            }
          },
          "examples": [
            {
              "mapToName": "priority",
              "mapToDisplayName": "Priority Score",
              "prompt": "Which field do you use to track the priority of a lead?"
            },
            {
              "mapToName": "linkedin_url",
              "mapToDisplayName": "LinkedIn URL",
              "prompt": "Which field do you use for the LinkedIn URL for the contact?"
            }
          ]
        }
      ],
      "examples": [
        {
          "fieldName": "FirstName",
          "mapToName": "first_name",
          "mapToDisplayName": "First Name"
        },
        {
          "fieldName": "Email"
        },
        {
          "mapToName": "priority",
          "mapToDisplayName": "Priority Score",
          "prompt": "Which field do you use to track the priority of a lead?"
        }
      ]
    },
    "write": {
      "type": "object",
      "description": "Configuration for writing data to the provider. Defines what objects can be written to.",
      "required": [
        "objects"
      ],
      "properties": {
        "objects": {
          "type": "array",
          "description": "List of objects that can be written to. Each object represents a data type that can be created or updated.",
          "items": {
            "$ref": "#/definitions/writeObject"
          },
          "examples": [
            [
              {
                "objectName": "contact",
                "inheritMapping": true
              },
              {
                "objectName": "lead"
              }
            ]
          ]
        }
      },
      "examples": [
        {
          "objects": [
            {
              "objectName": "contact",
              "inheritMapping": true
            },
            {
              "objectName": "lead",
              "inheritMapping": true
            },
            {
              "objectName": "account"
            }
          ]
        }
      ]
    },
    "writeObject": {
      "type": "object",
      "description": "Configuration for a specific object to write to. Defines what data can be written to this object type.",
      "required": [
        "objectName"
      ],
      "properties": {
        "objectName": {
          "type": "string",
          "description": "The name of the object to write to in the provider's API. Must match an object type that can be written to in the provider's API.",
          "examples": [
            "contact",
            "lead",
            "account",
            "opportunity"
          ]
        },
        "inheritMapping": {
          "type": "boolean",
          "description": "Whether to inherit mappings from read configuration. If true, field mappings defined in the read configuration will be used for writing, which simplifies configuration for bidirectional syncs.",
          "examples": [
            true,
            false
          ]
        }
      },
      "examples": [
        {
          "objectName": "contact",
          "inheritMapping": true
        },
        {
          "objectName": "lead"
        }
      ]
    },
    "subscribe": {
      "type": "object",
      "description": "Configuration for subscribing to events from the provider. Defines what events to listen for.",
      "required": [
        "events"
      ],
      "properties": {
        "events": {
          "type": "array",
          "description": "List of events to subscribe to. Each event represents a specific action or change to monitor.",
          "items": {
            "$ref": "#/definitions/event"
          },
          "examples": [
            [
              {
                "eventType": "contact.created",
                "destination": "contactCreatedWebhook"
              },
              {
                "eventType": "contact.updated",
                "destination": "contactUpdatedWebhook",
                "filter": {
                  "conditions": [
                    {
                      "field": "email",
                      "operator": "contains",
                      "value": "example.com"
                    }
                  ]
                }
              }
            ]
          ]
        }
      },
      "examples": [
        {
          "events": [
            {
              "eventType": "contact.created",
              "destination": "contactCreatedWebhook"
            },
            {
              "eventType": "contact.updated",
              "destination": "contactUpdatedWebhook",
              "filter": {
                "conditions": [
                  {
                    "field": "email",
                    "operator": "contains",
                    "value": "example.com"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "event": {
      "type": "object",
      "description": "Configuration for a specific event to subscribe to. Defines what event to listen for and how to handle it.",
      "required": [
        "eventType",
        "destination"
      ],
      "properties": {
        "eventType": {
          "type": "string",
          "description": "The type of event to subscribe to. Must match an event type supported by the provider.",
          "examples": [
            "contact.created",
            "lead.updated",
            "deal.closed",
            "account.deleted"
          ]
        },
        "destination": {
          "type": "string",
          "description": "The webhook destination for the event data. This determines where the event data will be sent when the event occurs.",
          "examples": [
            "contactCreatedWebhook",
            "defaultWebhook",
            "customEventWebhook"
          ]
        },
        "filter": {
          "type": "object",
          "description": "Filter to apply to events. Only events that match the filter will be processed. Useful for reducing the volume of events.",
          "required": [
            "conditions"
          ],
          "properties": {
            "conditions": {
              "type": "array",
              "description": "Conditions to filter by. Each condition checks a field against a value using an operator.",
              "items": {
                "type": "object",
                "required": [
                  "field",
                  "operator",
                  "value"
                ],
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "The field to filter on. Must be a field present in the event data.",
                    "examples": [
                      "email",
                      "status",
                      "amount",
                      "country"
                    ]
                  },
                  "operator": {
                    "type": "string",
                    "description": "The operator to use for comparison. Determines how the field is compared to the value.",
                    "enum": [
                      "equals",
                      "not_equals",
                      "contains",
                      "not_contains",
                      "starts_with",
                      "ends_with",
                      "greater_than",
                      "less_than"
                    ],
                    "examples": [
                      "equals",
                      "contains",
                      "greater_than"
                    ]
                  },
                  "value": {
                    "description": "The value to compare against. The type should match what's expected for the field.",
                    "type": [
                      "string",
                      "number",
                      "boolean"
                    ],
                    "examples": [
                      "example.com",
                      1000,
                      true
                    ]
                  }
                }
              },
              "examples": [
                [
                  {
                    "field": "email",
                    "operator": "contains",
                    "value": "example.com"
                  },
                  {
                    "field": "status",
                    "operator": "equals",
                    "value": "active"
                  }
                ]
              ]
            },
            "operator": {
              "type": "string",
              "description": "How to combine the conditions. 'and' requires all conditions to match, while 'or' requires any condition to match.",
              "enum": [
                "and",
                "or"
              ],
              "default": "and",
              "examples": [
                "and",
                "or"
              ]
            }
          },
          "examples": [
            {
              "conditions": [
                {
                  "field": "email",
                  "operator": "contains",
                  "value": "example.com"
                }
              ],
              "operator": "and"
            }
          ]
        },
        "transform": {
          "type": "object",
          "description": "Transformation to apply to event data before sending it to the destination. Allows you to reshape the data.",
          "required": [
            "mappings"
          ],
          "properties": {
            "mappings": {
              "type": "array",
              "description": "Field mappings for the transformation. Each mapping defines how to map a field from the source to the target.",
              "items": {
                "type": "object",
                "required": [
                  "source",
                  "target"
                ],
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "The source field path in the event data. Can use dot notation for nested fields.",
                    "examples": [
                      "user.email",
                      "contact.name",
                      "data.amount"
                    ]
                  },
                  "target": {
                    "type": "string",
                    "description": "The target field name in the transformed output. The resulting data will have this field name.",
                    "examples": [
                      "email",
                      "full_name",
                      "deal_amount"
                    ]
                  }
                }
              },
              "examples": [
                [
                  {
                    "source": "user.email",
                    "target": "email"
                  },
                  {
                    "source": "user.name",
                    "target": "full_name"
                  }
                ]
              ]
            },
            "includeOriginal": {
              "type": "boolean",
              "description": "Whether to include the original event data in the transformed output. If true, both original and transformed data will be included.",
              "default": true,
              "examples": [
                true,
                false
              ]
            }
          },
          "examples": [
            {
              "mappings": [
                {
                  "source": "user.email",
                  "target": "email"
                },
                {
                  "source": "user.name",
                  "target": "full_name"
                }
              ],
              "includeOriginal": false
            }
          ]
        }
      },
      "examples": [
        {
          "eventType": "contact.created",
          "destination": "contactCreatedWebhook"
        },
        {
          "eventType": "contact.updated",
          "destination": "contactUpdatedWebhook",
          "filter": {
            "conditions": [
              {
                "field": "email",
                "operator": "contains",
                "value": "example.com"
              }
            ]
          }
        }
      ]
    },
    "proxy": {
      "type": "object",
      "description": "Configuration for proxying API calls to the provider. Enables direct access to the provider's API.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether proxy is enabled for this integration. If true, API calls can be made directly to the provider through Ampersand's proxy.",
          "default": false,
          "examples": [
            true,
            false
          ]
        }
      },
      "examples": [
        {
          "enabled": true
        }
      ]
    }
  }
}